/**
 * Tiles
 * To build intricate 2-dimensional, you only need a single element: the o-tile:
 *
 * Modifiers
 * The o-tile element has 16 modifiers:

 * 3 contextual modifiers
 *    o-tile--ancestor
 *    o-tile--parent
 *    o-tile--child
 * 1 directional modifier
 *    o-tile--vertical
 * 6 horizontal size modifiers
 *    o-tile--1 to o-tile--6
 *
 * How it works: Nesting
 * Everything is an tile! To create a grid of tiles, you only need to nest o-tile elements.
 *
 * Start with an ancestor o-tile that will wrap all other o-tiles:
 * <div class="o-tile o-tile--ancestor">
 *
 * Add o-tile elements that will distribute themselves horizontally:
 * <div class="o-tile o-tile--ancestor">
 *     <div class="o-tile"></div>
 * </div>
 *
 * You can resize any tile according to a 12 column grid.
 * For example, o-tile--4 will take up 1/3 of the horizontal space.
 * <div class="o-tile o-tile--ancestor">
 *     <div class="o-tile o-tile--4"></div>
 * </div>
 *
 * If you want to stack tiles vertically, add o-tile--vertical on the parent o-tile:
 * <div class="o-tile o-tile--ancestor">
 *     <div class="o-tile o-tile--4 o-tile--vertical">
 *         <div class="o-tile"></div>
 *         <div class="o-tile"></div>
 *     </div>
 * </div>
 *
 * As soon as you want to add content to a tile, just:
 *   add any class you want, like .c-panel
 *   add the .o-tile--child modifier on the o-tile
 *   add the .o-tile--parent modifier on the parent o-tile
 * <div class="o-tile o-tile--ancestor">
 *     <div class="o-tile o-tile--4 o-tile--vertical o-tile--parent">
 *         <div class="o-tile o-tile--child box">
 *             <p class="title">One</p>
 *         </div>
 *     </div>
 * </div>
 */
.o-tile {
    $_o-tile-columns: 6;
    $_this: &;

    align-items: stretch;
    display: block;
    flex-basis: 0;
    flex-grow: 1;
    flex-shrink: 1;
    min-height: min-content;
    &:not(&--child) {
        display: flex;
    }
    &--ancestor {
        margin-left: -0.75rem;
        margin-right: -0.75rem;
        margin-top: -0.75rem;
        &:not(:last-child) {
            margin-bottom: 0.75rem;
        }
    }
    &--vertical {
        flex-direction: column;
        & > #{$_this}--child:not(:last-child) {
            margin-bottom: 1.5rem !important;
        }
    }
    &--parent {
        padding: 0.75rem;
    }
    &--child {
        margin: 0 !important;
    }
    @for $i from 1 to $_o-tile-columns {
        &--#{$i} {
            flex: none;
            width: (100% / $_o-tile-columns * $i);
        }
    }
}
